#!/bin/bash
#
# atasnap_init.sh - A wrapper around hpguppi_init.sh for running
# hpguppi_daq when using hte ATA SNAP F engines.

# Set high performance mode
for i in `ls /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor`; do echo performance > $i; done

# Kernel buffer sizes
sysctl net.core.rmem_max=1073741824 #1G
sysctl net.core.rmem_default=1073741824 #1G

instance=0
if [ -z "$1" ]
  then
    echo "Provide the instance ID of hpguppi_daq."
    exit
else
  instance=$1
  shift
fi

BINDHOST=
if [ -z "$1" ]
  then
    echo "No interface provided, falling back on hpguppi_init.sh. No packet optimisation executed."
else
  BINDHOST="-o BINDHOST=$1"

  # Set mtu
  ifconfig $1 mtu 9000

  # Kill packets before the IP stack, applicable to hashpipe_pktsock
  iptables -t raw -A PREROUTING -i $1 -p udp -j DROP

  # Set interrupt coalescing
  ethtool -C $1 adaptive-rx on
  ethtool -C $1 rx-frames 8
  ethtool -C $1 rx-usecs 0

  # Set ring sizes to max
  ethtool -G $1 rx 8192

  shift
fi

perf=
if [ "$1" = 'perf' ]
then
  perf=perf
  shift
fi

echo ""
echo "Killing existing hashpipes of instance $instance"
pkill -e -f ".*/hashpipe.*-I $instance"

# use environment variable instead of HOME/"/tmp" to ensure user-agnostic key is generated by ftok
export HASHPIPE_KEYFILE=/home/sonata 

$(dirname $0)/hpguppi_init.sh $perf atasnap $instance $BINDHOST\
  "${@}"